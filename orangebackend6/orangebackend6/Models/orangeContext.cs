// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace orangebackend6.Models
{
    public partial class orangeContext : DbContext
    {
        public orangeContext()
        {
        }

        public orangeContext(DbContextOptions<orangeContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Comentario> Comentario { get; set; }
        public virtual DbSet<Community> Community { get; set; }
        public virtual DbSet<Filesupload> Filesupload { get; set; }
        public virtual DbSet<Listascontrol> Listascontrol { get; set; }
        public virtual DbSet<Mensaje> Mensaje { get; set; }
        public virtual DbSet<Postreaction> Postreaction { get; set; }
        public virtual DbSet<Taskcomplete> Taskcomplete { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Comentario>(entity =>
            {
                entity.HasKey(e => e.Idcomentario);

                entity.ToTable("comentario");

                entity.Property(e => e.Idcomentario).HasColumnName("idcomentario");

                entity.Property(e => e.Codmsj)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("codmsj");

                entity.Property(e => e.Coduser)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("coduser");

                entity.Property(e => e.Comentario1)
                    .IsUnicode(false)
                    .HasColumnName("comentario");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Feccrea)
                    .HasColumnType("datetime")
                    .HasColumnName("feccrea");
            });

            modelBuilder.Entity<Community>(entity =>
            {
                entity.ToTable("community");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Codcomunity)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("codcomunity");

                entity.Property(e => e.Codusercrea)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codusercrea");

                entity.Property(e => e.Coduserinvite)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("coduserinvite");

                entity.Property(e => e.Color)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("color");

                entity.Property(e => e.Descrip)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("descrip");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Feccrea)
                    .HasColumnType("datetime")
                    .HasColumnName("feccrea");

                entity.Property(e => e.Icon)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("icon");

                entity.Property(e => e.Nombrecomunity)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nombrecomunity");

                entity.Property(e => e.Permison).HasColumnName("permison");
            });

            modelBuilder.Entity<Filesupload>(entity =>
            {
                entity.ToTable("filesupload");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Codusercrea)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("codusercrea");

                entity.Property(e => e.Feccrea)
                    .HasColumnType("datetime")
                    .HasColumnName("feccrea");

                entity.Property(e => e.Nombrearchivo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nombrearchivo");

                entity.Property(e => e.Url)
                    .HasMaxLength(700)
                    .IsUnicode(false)
                    .HasColumnName("url");
            });

            modelBuilder.Entity<Listascontrol>(entity =>
            {
                entity.ToTable("listascontrol");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Cantidad)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("cantidad");

                entity.Property(e => e.Codcommunity)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("codcommunity");

                entity.Property(e => e.Coduser)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("coduser");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Feccrea)
                    .HasColumnType("datetime")
                    .HasColumnName("feccrea");

                entity.Property(e => e.Nombrelista)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombrelista");

                entity.Property(e => e.PresupuestoInicial)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("presupuestoInicial");

                entity.Property(e => e.ValorUnitario)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("valorUnitario");
            });

            modelBuilder.Entity<Mensaje>(entity =>
            {
                entity.HasKey(e => e.Codmsj)
                    .HasName("PK_mensaje1");

                entity.ToTable("mensaje");

                entity.Property(e => e.Codmsj)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("codmsj");

                entity.Property(e => e.Codtipo)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("codtipo");

                entity.Property(e => e.Coduser)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("coduser");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.Estado).HasColumnName("estado");

                entity.Property(e => e.Feccrea)
                    .HasColumnType("datetime")
                    .HasColumnName("feccrea")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Fechacumple)
                    .HasColumnType("datetime")
                    .HasColumnName("fechacumple");

                entity.Property(e => e.Subtitle)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("subtitle");

                entity.Property(e => e.Title)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("title");
            });

            modelBuilder.Entity<Postreaction>(entity =>
            {
                entity.ToTable("postreaction");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Codemoticon).HasColumnName("codemoticon");

                entity.Property(e => e.Codpost)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("codpost");

                entity.Property(e => e.Coduser)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("coduser");

                entity.Property(e => e.Fecrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fecrea")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<Taskcomplete>(entity =>
            {
                entity.ToTable("taskcomplete");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Codmsj)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("codmsj");

                entity.Property(e => e.Codusercrea)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("codusercrea");

                entity.Property(e => e.Feccomplete)
                    .HasColumnType("datetime")
                    .HasColumnName("feccomplete");
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.HasKey(e => e.Coduser);

                entity.ToTable("usuario");

                entity.Property(e => e.Coduser)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("coduser");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Estadoconexion).HasColumnName("estadoconexion");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Password)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("password");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}